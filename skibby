local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local KEY_URL = "https://paste-drop.com/raw/r9TImq6Bv8" -- Your paste-drop.com raw URL
local scriptURLs = {
    ["StateOfAnarchy"] = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/State%20Of%20Anarchy%20(In-Progress)",
    ["TeleportBehindPlayer"] = "https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/Teleport%20Behind%20Player"
}

local function loadScripts()
    for scriptName, scriptURL in pairs(scriptURLs) do
        local success, err = pcall(function()
            loadstring(game:HttpGet(scriptURL))()
        end)
        if not success then
            warn("Failed to load script " .. scriptName .. ": " .. err)
        end
    end
end

-- Function to fetch the key with multiple methods
local function fetchKey()
    local key = nil
    
    -- Method 1: game:HttpGet (Roblox native)
    local success, response = pcall(function()
        return game:HttpGet(KEY_URL)
    end)
    if success and response and response ~= "" then
        key = response
        return key
    else
        warn("Method 1 (game:HttpGet) failed: " .. (response or "No response"))
    end
    
    -- Method 2: syn.request (Synapse X or compatible)
    if not key and syn and syn.request then
        success, response = pcall(function()
            local req = syn.request({
                Url = KEY_URL,
                Method = "GET"
            })
            return req.Body
        end)
        if success and response and response ~= "" then
            key = response
            return key
        else
            warn("Method 2 (syn.request) failed: " .. (response or "No response"))
        end
    end
    
    -- Method 3: http.request or other executor-specific methods
    if not key then
        local httpRequest = http and http.request or request or httprequest
        if httpRequest then
            success, response = pcall(function()
                local req = httpRequest({
                    Url = KEY_URL,
                    Method = "GET"
                })
                return req.Body
            end)
            if success and response and response ~= "" then
                key = response
                return key
            else
                warn("Method 3 (http.request) failed: " .. (response or "No response"))
            end
        end
    end
    
    -- Final fallback if all methods fail
    warn("All key fetch methods failed. Using fallback key.")
    return "Change444key"
end

-- Rayfield GUI Setup
local Window = Rayfield:CreateWindow({
    Name = "ComboChronicle Vault | State Of Anarchy",
    LoadingTitle = "Loading ComboChronicle Vault ‚ùñ",
    LoadingSubtitle = "By COMBO_WICK | Bang.E.Line",
    Theme = "Ocean"
})

-- Key and Credits Tab
local KeyTab = Window:CreateTab("Key & Credits", 4483362458)

-- Key Input Section
KeyTab:CreateInput({
    Name = "Enter Key",
    PlaceholderText = "Type the key here...",
    RemoveTextAfterFocusLost = false,
    Callback = function(input)
        Rayfield:Notify({
            Title = "‚è≥ Checking",
            Content = "Verifying key...",
            Duration = 2
        })
        task.wait(0.7) -- Small delay for user feedback
        local requiredKey = fetchKey()
        if input == requiredKey then
            Rayfield:Notify({
                Title = "‚úÖ Success",
                Content = "Access granted! Loading scripts...",
                Duration = 3
            })
            task.wait(1) -- Delay before closing GUI
            Rayfield:Destroy() -- Close the GUI
            loadScripts() -- Load scripts if the key is correct
        else
            Rayfield:Notify({
                Title = "‚ùå Incorrect Key",
                Content = "Join the Discord to get the correct key!",
                Duration = 5,
                Image = 4483362458
            })
        end
    end
})

-- Button to Copy Discord/YouTube Links
KeyTab:CreateButton({
    Name = "üìã Copy Discord Link/YouTube",
    Callback = function()
        local links = "Discord: discord.com/invite/mwTHaCKzhw\nYouTube: https://www.youtube.com/@COMBO_WICK"
        setclipboard(links) -- Copy links to clipboard
        Rayfield:Notify({
            Title = "‚úÖ Links Copied",
            Content = "Discord and YouTube links have been copied to your clipboard!",
            Duration = 5,
            Image = 4483362458
        })
    end
})
