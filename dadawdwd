-- MOBILE-SAFE DUAL SCRIPT LOADER WITH NEW KEY SYSTEM
-- Prevents crashes on mobile devices through memory management
-- Updated key validation system

local Players = game:GetService('Players')
local RunService = game:GetService('RunService')
local HttpService = game:GetService('HttpService')

-- Mobile detection
local isMobile = game:GetService('UserInputService').TouchEnabled and not game:GetService('UserInputService').KeyboardEnabled

-- Memory-safe delay function
local function safeWait(duration)
    local start = tick()
    while tick() - start < duration do
        RunService.Heartbeat:Wait()
    end
end

-- NEW KEY VALIDATION SYSTEM
local function validateKey(key)
    if not key or key == '' then
        print("‚ùå No key provided")
        return false
    end

    print("üîë Validating key...")
    
    local url = 'https://v0-conversation-interruption.vercel.app/api/roblox-validate?key=' .. HttpService:UrlEncode(key)
    
    local success, response = pcall(function()
        -- Try different HTTP methods based on executor
        if request then
            local result = request({
                Url = url,
                Method = "GET"
            })
            return result.Body
        elseif http_request then
            local result = http_request({
                Url = url,
                Method = "GET"
            })
            return result.Body
        elseif syn and syn.request then
            local result = syn.request({
                Url = url,
                Method = "GET"
            })
            return result.Body
        else
            return game:HttpGet(url)
        end
    end)

    if not success then
        print("‚ùå Network error:", response)
        return false
    end

    -- Try to decode JSON response
    local data
    local jsonSuccess, jsonError = pcall(function()
        data = HttpService:JSONDecode(response)
    end)

    if not jsonSuccess then
        print("‚ùå Invalid server response")
        print("Raw response:", response)
        return false
    end

    -- Check validation result
    if data.success then
        print("‚úÖ Key valid! Welcome " .. (data.username or "User"))
        if data.expires_at then
            print("üïí Key expires: " .. data.expires_at)
        end
        return true
    else
        print("‚ùå Key invalid: " .. (data.message or "Unknown error"))
        return false
    end
end

-- Mobile-optimized script loader
local function loadScriptSafely(url, name)
    local success, script = pcall(function()
        return game:HttpGet(url)
    end)
    
    if success and script then
        local loadSuccess = pcall(function()
            loadstring(script)()
        end)
        
        if loadSuccess then
            print(name .. " loaded successfully")
            return true
        else
            warn(name .. " failed to execute")
            return false
        end
    else
        warn(name .. " failed to download")
        return false
    end
end

-- Fast parallel loading with mobile safety
local function executeScripts()
    if isMobile then
        print("üì± Mobile device detected - using optimized loading...")
    end
    
    local script1Success, script2Success, script3Success = false, false, false
    
    -- Start first two scripts simultaneously
    spawn(function()
        script1Success = loadScriptSafely(
            'https://v0-supabase-secure-storage.vercel.app/api/script/fa4eb8fcbee7a5b1b3827c62bfffaae0',
            "Script 1"
        )
    end)
    
    -- Minimal delay only for mobile devices
    if isMobile then
        safeWait(0.3)  -- Reduced to 0.3 seconds for mobile
    end
    
    spawn(function()
        script2Success = loadScriptSafely(
            'https://v0-supabase-secure-storage.vercel.app/api/script/f353c1a7f2ed8c8420265e7cfdbf118b',
            "Script 2"
        )
    end)
    
    -- Wait for first two scripts to complete (max 10 seconds)
    local timeout = 0
    while (not script1Success or not script2Success) and timeout < 100 do
        safeWait(0.1)
        timeout = timeout + 1
    end
    
    -- Wait 5 seconds after first two scripts complete
    print("‚è≥ Waiting 5 seconds before loading Script 3...")
    safeWait(5)
    
    -- Load the third script (formerly script 2)
    spawn(function()
        script3Success = loadScriptSafely(
            'https://raw.githubusercontent.com/checkurasshole/Script/refs/heads/main/NOOOOO.lua',
            "Script 3"
        )
    end)
    
    -- Wait for third script to complete (max 10 seconds)
    timeout = 0
    while not script3Success and timeout < 100 do
        safeWait(0.1)
        timeout = timeout + 1
    end
    
    -- Status report
    local successCount = (script1Success and 1 or 0) + (script2Success and 1 or 0) + (script3Success and 1 or 0)
    
    if successCount == 3 then
        print("‚úÖ All scripts loaded successfully!")
    elseif successCount > 0 then
        print("‚ö†Ô∏è " .. successCount .. "/3 scripts loaded")
    else
        print("‚ùå All scripts failed to load")
    end
end

-- Main execution - validate key then run scripts
if validateKey(script_key) then
    print("üöÄ Key validated! Loading ComboHub...")
    
    if isMobile then
        print("üì± Mobile device detected - using safe loading")
    end
    
    executeScripts()
else
    error("‚ùå Invalid key! Please check your key and try again.")
end
