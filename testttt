--// ðŸ”’ Universal Anti-Cheat Bypass v6 - GENTLE LOOP

-- Simple GUI Creation
local gui = Instance.new('ScreenGui')
local frame = Instance.new('Frame')
local titleLabel = Instance.new('TextLabel')
local deleteButton = Instance.new('TextButton')
local toggleButton = Instance.new('TextButton')
local creditsLabel = Instance.new('TextLabel')

gui.Name = 'BypassController'
gui.Parent = game.CoreGui

frame.Size = UDim2.new(0, 280, 0, 90)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = gui

local corner = Instance.new('UICorner')
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

titleLabel.Size = UDim2.new(1, 0, 0, 25)
titleLabel.Position = UDim2.new(0, 0, 0, 5)
titleLabel.Text = 'ðŸ”’ Bypass Controller'
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = frame

deleteButton.Size = UDim2.new(0.45, 0, 0, 25)
deleteButton.Position = UDim2.new(0.52, 0, 0, 35)
deleteButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
deleteButton.Text = 'Delete'
deleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
deleteButton.TextScaled = true
deleteButton.Font = Enum.Font.Gotham
deleteButton.Parent = frame

local deleteCorner = Instance.new('UICorner')
deleteCorner.CornerRadius = UDim.new(0, 4)
deleteCorner.Parent = deleteButton

toggleButton.Size = UDim2.new(0.45, 0, 0, 25)
toggleButton.Position = UDim2.new(0.03, 0, 0, 35)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
toggleButton.Text = 'ON'
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextScaled = true
toggleButton.Font = Enum.Font.Gotham
toggleButton.Parent = frame

local toggleCorner = Instance.new('UICorner')
toggleCorner.CornerRadius = UDim.new(0, 4)
toggleCorner.Parent = toggleButton

creditsLabel.Size = UDim2.new(1, 0, 0, 15)
creditsLabel.Position = UDim2.new(0, 0, 0, 70)
creditsLabel.Text = 'COMBO_WICK'
creditsLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
creditsLabel.BackgroundTransparency = 1
creditsLabel.TextScaled = true
creditsLabel.Font = Enum.Font.Gotham
creditsLabel.Parent = frame

-- Get services
local Players = game:GetService('Players')
local RunService = game:GetService('RunService')

-- Get metatable
local mt = getrawmetatable(game)
local setreadonly = setreadonly or make_writeable
if setreadonly then
    setreadonly(mt, false)
end

-- Store originals safely
local originals = {
    namecall = rawget(mt, '__namecall'),
    index = rawget(mt, '__index'),
    newindex = rawget(mt, '__newindex'),
}

-- Variables
local player = Players.LocalPlayer
local bypassActive = true
local loopActive = true

-- Utility functions
local function isLocalPlayer(obj)
    return obj == player or (obj and obj.Parent == player)
end

-- Hook setup
local function setupBypass()
    rawset(
        mt,
        '__namecall',
        newcclosure(function(self, ...)
            local method = getnamecallmethod()
            local args = { ... }

            if bypassActive and not checkcaller() then
                -- Block kick methods
                if method:lower():find('kick') and isLocalPlayer(self) then
                    warn('[BYPASS] Kick blocked:', method)
                    return
                end

                -- Block removal methods
                if
                    (method == 'Remove' or method == 'Destroy')
                    and isLocalPlayer(self)
                then
                    warn('[BYPASS] Player removal blocked')
                    return
                end

                -- Block suspicious remotes
                if method == 'FireServer' or method == 'InvokeServer' then
                    local name = tostring(self):lower()
                    if
                        name:find('ban')
                        or name:find('kick')
                        or name:find('anticheat')
                        or name:find('security')
                    then
                        warn('[BYPASS] Blocked remote:', name)
                        return
                    end
                end
            end

            return originals.namecall(self, unpack(args))
        end)
    )

    rawset(
        mt,
        '__index',
        newcclosure(function(self, key)
            if bypassActive and not checkcaller() and isLocalPlayer(self) then
                if tostring(key):lower():find('kick') then
                    return function()
                        warn('[BYPASS] Kick function spoofed')
                    end
                end
            end
            return originals.index(self, key)
        end)
    )

    rawset(
        mt,
        '__newindex',
        newcclosure(function(self, key, value)
            if bypassActive and not checkcaller() then
                local k = tostring(key):lower()

                -- Block kick overrides
                if isLocalPlayer(self) and k:find('kick') then
                    warn('[BYPASS] Kick override blocked')
                    return
                end
            end
            return originals.newindex(self, key, value)
        end)
    )
end

-- Apply initial hooks
setupBypass()

-- Very gentle loop - runs every 5 seconds
spawn(function()
    while loopActive do
        wait(5) -- 5 second pause between each check

        if bypassActive then
            -- Basic player control restore (very gentle)
            pcall(function()
                local char = player.Character
                if char then
                    local hum = char:FindFirstChild('Humanoid')
                    if hum and hum.PlatformStand then
                        hum.PlatformStand = false
                    end
                end
            end)

            -- Spoof environment variables (once every 5 seconds)
            pcall(function()
                getgenv().SpeedHack = false
                getgenv().AutoFarm = false
                getgenv().Exploiting = false
            end)
        end
    end
end)

-- Even gentler script protection - runs every 10 seconds
spawn(function()
    while loopActive do
        wait(10) -- 10 second pause

        if bypassActive then
            -- Only check a few scripts at a time, not all at once
            local count = 0
            for _, obj in pairs(game:GetDescendants()) do
                if count >= 5 then
                    break
                end -- Only check 5 scripts max per cycle

                if obj:IsA('LocalScript') then
                    local name = obj.Name:lower()
                    if name:find('anticheat') or name:find('ban') then
                        if
                            not obj:IsDescendantOf(
                                player:FindFirstChild('PlayerScripts') or player
                            )
                        then
                            pcall(function()
                                obj.Enabled = false
                                warn('[BYPASS] Disabled script:', obj.Name)
                                count = count + 1
                            end)
                        end
                    end
                end
            end
        end
    end
end)

-- GUI Button Functions
deleteButton.MouseButton1Click:Connect(function()
    loopActive = false
    -- Restore original hooks
    rawset(mt, '__namecall', originals.namecall)
    rawset(mt, '__index', originals.index)
    rawset(mt, '__newindex', originals.newindex)
    gui:Destroy()
    warn('[BYPASS] Fully disabled and removed')
end)

toggleButton.MouseButton1Click:Connect(function()
    bypassActive = not bypassActive
    if bypassActive then
        toggleButton.Text = 'ON'
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
        setupBypass()
        warn('[BYPASS] Enabled')
    else
        toggleButton.Text = 'OFF'
        toggleButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
        -- Restore original hooks
        rawset(mt, '__namecall', originals.namecall)
        rawset(mt, '__index', originals.index)
        rawset(mt, '__newindex', originals.newindex)
        warn('[BYPASS] Disabled')
    end
end)

-- Make GUI draggable
local dragging = false
local dragStart = nil
local startPos = nil

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Lock metatable
if setreadonly then
    setreadonly(mt, true)
end

print('[ðŸ”’ BYPASS v6] Gentle Loop Active | 5s intervals')
