local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local UserInputType = Enum.UserInputType

local lp = Players.LocalPlayer

local connections = {}
local gui = nil

local function isMobile()
	return UIS.TouchEnabled and not UIS.KeyboardEnabled and not UIS.MouseEnabled
end

local glideEnabled = true
local glideForce = 3
local baseSpeed = 30
local isMobileDevice = isMobile()

local function createGUI()
	if gui and gui.Parent then
		return
	end

	gui = Instance.new("ScreenGui")
	gui.Name = isMobileDevice and "Mobile WalkSpeed" or "Bunny Hop PC only"
	gui.ResetOnSpawn = false
	gui.Parent = game.CoreGui

	if isMobileDevice then
		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0, 220, 0, 140)
		frame.Position = UDim2.new(0.02, 0, 0.4, 0)
		frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		frame.BorderSizePixel = 0
		frame.Active = true
		frame.Draggable = true
		frame.Parent = gui

		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0, 8)
		corner.Parent = frame

		local title = Instance.new("TextLabel")
		title.Size = UDim2.new(1, 0, 0, 25)
		title.Text = "📱 Mobile WalkSpeed"
		title.TextColor3 = Color3.new(1, 1, 1)
		title.BackgroundTransparency = 1
		title.Font = Enum.Font.SourceSansBold
		title.TextSize = 16
		title.Parent = frame

		local speedLabel = Instance.new("TextLabel")
		speedLabel.Position = UDim2.new(0, 5, 0, 30)
		speedLabel.Size = UDim2.new(1, -10, 0, 20)
		speedLabel.Text = "Speed: " .. baseSpeed
		speedLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
		speedLabel.BackgroundTransparency = 1
		speedLabel.Font = Enum.Font.SourceSansBold
		speedLabel.TextSize = 14
		speedLabel.Parent = frame

		local inputBox = Instance.new("TextBox")
		inputBox.Position = UDim2.new(0, 5, 0, 55)
		inputBox.Size = UDim2.new(1, -10, 0, 25)
		inputBox.PlaceholderText = "Enter speed"
		inputBox.Text = ""
		inputBox.TextColor3 = Color3.new(1, 1, 1)
		inputBox.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
		inputBox.BorderSizePixel = 0
		inputBox.Font = Enum.Font.SourceSans
		inputBox.TextSize = 14
		inputBox.ClearTextOnFocus = false
		inputBox.Parent = frame

		local inputCorner = Instance.new("UICorner")
		inputCorner.CornerRadius = UDim.new(0, 4)
		inputCorner.Parent = inputBox

		local quickFrame = Instance.new("Frame")
		quickFrame.Position = UDim2.new(0, 5, 0, 85)
		quickFrame.Size = UDim2.new(1, -10, 0, 25)
		quickFrame.BackgroundTransparency = 1
		quickFrame.Parent = frame

		local speeds = {16, 30, 50, 100}
		for i, speed in ipairs(speeds) do
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(0.23, 0, 1, 0)
			btn.Position = UDim2.new((i-1) * 0.25, 0, 0, 0)
			btn.Text = tostring(speed)
			btn.TextColor3 = Color3.new(1, 1, 1)
			btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			btn.Font = Enum.Font.SourceSans
			btn.TextSize = 12
			btn.Parent = quickFrame

			local btnCorner = Instance.new("UICorner")
			btnCorner.CornerRadius = UDim.new(0, 3)
			btnCorner.Parent = btn

			btn.MouseButton1Click:Connect(function()
				baseSpeed = speed
				local char = lp.Character
				if char then
					local hum = char:FindFirstChild("Humanoid")
					if hum then
						hum.WalkSpeed = baseSpeed
					end
				end
				speedLabel.Text = "Speed: " .. baseSpeed
			end)
		end

		local infoLabel = Instance.new("TextLabel")
		infoLabel.Position = UDim2.new(0, 5, 0, 115)
		infoLabel.Size = UDim2.new(1, -10, 0, 20)
		infoLabel.Text = "Mobile device detected"
		infoLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
		infoLabel.BackgroundTransparency = 1
		infoLabel.Font = Enum.Font.SourceSansItalic
		infoLabel.TextSize = 11
		infoLabel.TextWrapped = true
		infoLabel.Parent = frame

		inputBox.FocusLost:Connect(function(enter)
			if enter then
				local speed = tonumber(inputBox.Text)
				if speed and speed > 0 and speed <= 1000 then
					baseSpeed = speed
					local char = lp.Character
					if char then
						local hum = char:FindFirstChild("Humanoid")
						if hum then
							hum.WalkSpeed = baseSpeed
						end
					end
					speedLabel.Text = "Speed: " .. baseSpeed
					inputBox.Text = ""
					
					speedLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
				else
					inputBox.Text = "Invalid!"
					inputBox.TextColor3 = Color3.fromRGB(255, 100, 100)
					task.wait(1)
					inputBox.Text = ""
					inputBox.TextColor3 = Color3.new(1, 1, 1)
				end
			end
		end)

	else
		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0, 220, 0, 200)
		frame.Position = UDim2.new(0.02, 0, 0.4, 0)
		frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
		frame.BorderSizePixel = 0
		frame.Active = true
		frame.Draggable = true
		frame.Parent = gui

		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0, 8)
		corner.Parent = frame

		local title = Instance.new("TextLabel")
		title.Size = UDim2.new(1, 0, 0, 25)
		title.Text = "🖥️ PC Bunny Hop"
		title.TextColor3 = Color3.new(1, 1, 1)
		title.BackgroundTransparency = 1
		title.Font = Enum.Font.SourceSansBold
		title.TextSize = 18
		title.Parent = frame

		local speedLabel = Instance.new("TextLabel")
		speedLabel.Position = UDim2.new(0, 5, 0, 30)
		speedLabel.Size = UDim2.new(1, -10, 0, 20)
		speedLabel.Text = "Speed: " .. baseSpeed
		speedLabel.TextColor3 = Color3.new(1, 1, 1)
		speedLabel.BackgroundTransparency = 1
		speedLabel.Font = Enum.Font.SourceSans
		speedLabel.TextSize = 16
		speedLabel.Parent = frame

		local inputBox = Instance.new("TextBox")
		inputBox.Position = UDim2.new(0, 5, 0, 55)
		inputBox.Size = UDim2.new(1, -10, 0, 25)
		inputBox.PlaceholderText = "Enter speed"
		inputBox.Text = ""
		inputBox.TextColor3 = Color3.new(1, 1, 1)
		inputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		inputBox.BorderSizePixel = 0
		inputBox.Font = Enum.Font.SourceSans
		inputBox.TextSize = 14
		inputBox.ClearTextOnFocus = false
		inputBox.Parent = frame

		local inputCorner = Instance.new("UICorner")
		inputCorner.CornerRadius = UDim.new(0, 4)
		inputCorner.Parent = inputBox

		local toggleButton = Instance.new("TextButton")
		toggleButton.Position = UDim2.new(0, 5, 0, 90)
		toggleButton.Size = UDim2.new(1, -10, 0, 30)
		toggleButton.Text = "Bunny Hop: ON"
		toggleButton.TextColor3 = Color3.new(1, 1, 1)
		toggleButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
		toggleButton.Font = Enum.Font.SourceSansBold
		toggleButton.TextSize = 16
		toggleButton.Parent = frame

		local buttonCorner = Instance.new("UICorner")
		buttonCorner.CornerRadius = UDim.new(0, 4)
		buttonCorner.Parent = toggleButton

		local statusLabel = Instance.new("TextLabel")
		statusLabel.Position = UDim2.new(0, 5, 0, 125)
		statusLabel.Size = UDim2.new(1, -10, 0, 20)
		statusLabel.Text = "Status: ACTIVE"
		statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
		statusLabel.BackgroundTransparency = 1
		statusLabel.Font = Enum.Font.SourceSansBold
		statusLabel.TextSize = 14
		statusLabel.Parent = frame

		local infoLabel = Instance.new("TextLabel")
		infoLabel.Position = UDim2.new(0, 5, 0, 150)
		infoLabel.Size = UDim2.new(1, -10, 0, 45)
		infoLabel.Text = "Use WASD to move while bunny hopping"
		infoLabel.TextColor3 = Color3.new(1, 1, 1)
		infoLabel.BackgroundTransparency = 1
		infoLabel.Font = Enum.Font.SourceSansItalic
		infoLabel.TextSize = 12
		infoLabel.TextWrapped = true
		infoLabel.Parent = frame

		toggleButton.MouseButton1Click:Connect(function()
			glideEnabled = not glideEnabled
			toggleButton.Text = "Bunny Hop: " .. (glideEnabled and "ON" or "OFF")
			toggleButton.BackgroundColor3 = glideEnabled and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(150, 50, 50)
			statusLabel.Text = "Status: " .. (glideEnabled and "ACTIVE" or "DISABLED")
			statusLabel.TextColor3 = glideEnabled and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)
		end)

		inputBox.FocusLost:Connect(function(enter)
			if enter then
				local speed = tonumber(inputBox.Text)
				if speed and speed > 0 and speed <= 1000 then
					baseSpeed = speed
					local char = lp.Character
					if char then
						local hum = char:FindFirstChild("Humanoid")
						if hum then
							hum.WalkSpeed = baseSpeed
						end
					end
					speedLabel.Text = "Speed: " .. baseSpeed
					inputBox.Text = ""
				end
			end
		end)
	end
end

local function getInputDirection()
	local dir = Vector3.new()
	if UIS:IsKeyDown(Enum.KeyCode.W) then
		dir = dir + Vector3.new(0, 0, 1)
	end
	if UIS:IsKeyDown(Enum.KeyCode.S) then
		dir = dir + Vector3.new(0, 0, -1)
	end
	if UIS:IsKeyDown(Enum.KeyCode.A) then
		dir = dir + Vector3.new(-1, 0, 0)
	end
	if UIS:IsKeyDown(Enum.KeyCode.D) then
		dir = dir + Vector3.new(1, 0, 0)
	end
	if dir.Magnitude > 0 then
		return dir.Unit
	else
		return Vector3.new(0,0,0)
	end
end

createGUI()

if isMobileDevice then
	RunService.Heartbeat:Connect(function()
		local char = lp.Character
		if char then
			local hum = char:FindFirstChild("Humanoid")
			if hum and hum.WalkSpeed ~= baseSpeed then
				hum.WalkSpeed = baseSpeed
			end
		end
	end)
else
	RunService.Heartbeat:Connect(function()
		local char = lp.Character
		if not char then return end
		
		local hum = char:FindFirstChild("Humanoid")
		local hrp = char:FindFirstChild("HumanoidRootPart")
		
		if not hum or not hrp or hum.Health <= 0 then return end
		
		if hum.WalkSpeed ~= baseSpeed then
			hum.WalkSpeed = baseSpeed
		end
		
		if not glideEnabled then return end

		if hum.FloorMaterial ~= Enum.Material.Air then
			hum:ChangeState(Enum.HumanoidStateType.Jumping)
		end

		local inputDir = getInputDirection()
		if inputDir.Magnitude > 0 then
			local camera = workspace.CurrentCamera
			if not camera then return end
			
			local camCFrame = camera.CFrame
			local moveDir = (camCFrame.RightVector * inputDir.X + camCFrame.LookVector * inputDir.Z)
			moveDir = Vector3.new(moveDir.X, 0, moveDir.Z).Unit

			local newVelocity = Vector3.new(
				math.clamp(moveDir.X * baseSpeed * glideForce, -200, 200),
				hrp.Velocity.Y,
				math.clamp(moveDir.Z * baseSpeed * glideForce, -200, 200)
			)
			hrp.Velocity = newVelocity
		end
	end)
end

print("[Enhanced Movement] Script loaded for " .. (isMobileDevice and "Mobile" or "PC") .. " device")
