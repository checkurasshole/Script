-- Script_1759436914299
-- Script ID: dc8a6cff32f6fe3b7c2c34f138c4333f
-- Migrated: 2025-10-02T20:31:56.830Z
-- Auto-generated by Lua Script Vault

-- AI API GUI for Roblox Executor (Fixed for all executors)
-- Modern, functional interface for calling your AI API

local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")

-- Configuration
local API_URL = "https://v0-remix-of-untitled.vercel.app/api/roblox"

-- Available models
local MODELS = {
    "Qwen/Qwen2.5-Coder-32B-Instruct",
    "deepseek-ai/DeepSeek-R1",
    "meta-llama/Llama-3.1-70B-Instruct"
}

-- Function to clean AI response (remove markdown code blocks and formatting)
local function cleanAIResponse(text)
    if not text then return text end
    
    -- Remove ```lua and ``` markers
    text = text:gsub("```lua\n", "")
    text = text:gsub("```lua", "")
    text = text:gsub("\n```", "")
    text = text:gsub("```", "")
    
    -- Remove **bold** markdown formatting
    text = text:gsub("%*%*(.-)%*%*", "%1")
    
    -- Trim whitespace
    text = text:match("^%s*(.-)%s*$")
    
    return text
end

-- Function to call the AI API (executor-compatible)
local function callAI(prompt, model)
    model = model or MODELS[1]
    
    local requestData = {
        Url = API_URL,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = HttpService:JSONEncode({
            prompt = prompt,
            model = model
        })
    }
    
    -- Try different executor HTTP functions
    local httpRequest = (syn and syn.request) or http_request or request
    
    if not httpRequest then
        return nil, "Your executor doesn't support HTTP requests!"
    end
    
    local success, response = pcall(function()
        return httpRequest(requestData)
    end)
    
    if success and response.StatusCode == 200 then
        local data = HttpService:JSONDecode(response.Body)
        if data.success then
            -- Clean the response before returning
            local cleanedResponse = cleanAIResponse(data.response)
            return cleanedResponse, nil
        else
            return nil, data.error or "Unknown API error"
        end
    else
        return nil, "Request failed: " .. (response and tostring(response.StatusCode) or "Unknown error")
    end
end

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AIAssistantGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Try to parent to CoreGui, fallback to PlayerGui
local success = pcall(function()
    ScreenGui.Parent = CoreGui
end)
if not success then
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
end

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 600, 0, 450)
MainFrame.Position = UDim2.new(0.5, -300, 0.5, -225)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Add rounded corners
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 10)
TitleCorner.Parent = TitleBar

-- Title Text
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -100, 1, 0)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "AI Script Assistant"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 18
Title.Font = Enum.Font.GothamBold
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 16
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Parent = TitleBar

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- Model Selection
local ModelLabel = Instance.new("TextLabel")
ModelLabel.Name = "ModelLabel"
ModelLabel.Size = UDim2.new(0, 80, 0, 25)
ModelLabel.Position = UDim2.new(0, 15, 0, 55)
ModelLabel.BackgroundTransparency = 1
ModelLabel.Text = "Model:"
ModelLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
ModelLabel.TextSize = 14
ModelLabel.Font = Enum.Font.Gotham
ModelLabel.TextXAlignment = Enum.TextXAlignment.Left
ModelLabel.Parent = MainFrame

local ModelDropdown = Instance.new("TextButton")
ModelDropdown.Name = "ModelDropdown"
ModelDropdown.Size = UDim2.new(1, -110, 0, 30)
ModelDropdown.Position = UDim2.new(0, 100, 0, 50)
ModelDropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
ModelDropdown.Text = MODELS[1]
ModelDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
ModelDropdown.TextSize = 12
ModelDropdown.Font = Enum.Font.Gotham
ModelDropdown.TextXAlignment = Enum.TextXAlignment.Left
ModelDropdown.Parent = MainFrame

local DropdownCorner = Instance.new("UICorner")
DropdownCorner.CornerRadius = UDim.new(0, 6)
DropdownCorner.Parent = ModelDropdown

local DropdownPadding = Instance.new("UIPadding")
DropdownPadding.PaddingLeft = UDim.new(0, 10)
DropdownPadding.Parent = ModelDropdown

-- Prompt Input
local PromptLabel = Instance.new("TextLabel")
PromptLabel.Name = "PromptLabel"
PromptLabel.Size = UDim2.new(1, -30, 0, 25)
PromptLabel.Position = UDim2.new(0, 15, 0, 95)
PromptLabel.BackgroundTransparency = 1
PromptLabel.Text = "Enter your prompt:"
PromptLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
PromptLabel.TextSize = 14
PromptLabel.Font = Enum.Font.Gotham
PromptLabel.TextXAlignment = Enum.TextXAlignment.Left
PromptLabel.Parent = MainFrame

local PromptBox = Instance.new("TextBox")
PromptBox.Name = "PromptBox"
PromptBox.Size = UDim2.new(1, -30, 0, 80)
PromptBox.Position = UDim2.new(0, 15, 0, 125)
PromptBox.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
PromptBox.TextColor3 = Color3.fromRGB(255, 255, 255)
PromptBox.TextSize = 13
PromptBox.Font = Enum.Font.Gotham
PromptBox.Text = ""
PromptBox.PlaceholderText = "e.g., Create a fly script for Roblox"
PromptBox.PlaceholderColor3 = Color3.fromRGB(120, 120, 120)
PromptBox.TextXAlignment = Enum.TextXAlignment.Left
PromptBox.TextYAlignment = Enum.TextYAlignment.Top
PromptBox.MultiLine = true
PromptBox.ClearTextOnFocus = false
PromptBox.Parent = MainFrame

local PromptCorner = Instance.new("UICorner")
PromptCorner.CornerRadius = UDim.new(0, 6)
PromptCorner.Parent = PromptBox

local PromptPadding = Instance.new("UIPadding")
PromptPadding.PaddingLeft = UDim.new(0, 10)
PromptPadding.PaddingTop = UDim.new(0, 10)
PromptPadding.PaddingRight = UDim.new(0, 10)
PromptPadding.Parent = PromptBox

-- Generate Button
local GenerateButton = Instance.new("TextButton")
GenerateButton.Name = "GenerateButton"
GenerateButton.Size = UDim2.new(0, 120, 0, 35)
GenerateButton.Position = UDim2.new(0, 15, 0, 215)
GenerateButton.BackgroundColor3 = Color3.fromRGB(60, 120, 240)
GenerateButton.Text = "Generate"
GenerateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
GenerateButton.TextSize = 14
GenerateButton.Font = Enum.Font.GothamBold
GenerateButton.Parent = MainFrame

local GenerateCorner = Instance.new("UICorner")
GenerateCorner.CornerRadius = UDim.new(0, 6)
GenerateCorner.Parent = GenerateButton

-- Execute Button
local ExecuteButton = Instance.new("TextButton")
ExecuteButton.Name = "ExecuteButton"
ExecuteButton.Size = UDim2.new(0, 120, 0, 35)
ExecuteButton.Position = UDim2.new(0, 145, 0, 215)
ExecuteButton.BackgroundColor3 = Color3.fromRGB(50, 180, 100)
ExecuteButton.Text = "Execute"
ExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteButton.TextSize = 14
ExecuteButton.Font = Enum.Font.GothamBold
ExecuteButton.Parent = MainFrame

local ExecuteCorner = Instance.new("UICorner")
ExecuteCorner.CornerRadius = UDim.new(0, 6)
ExecuteCorner.Parent = ExecuteButton

-- Copy Button
local CopyButton = Instance.new("TextButton")
CopyButton.Name = "CopyButton"
CopyButton.Size = UDim2.new(0, 120, 0, 35)
CopyButton.Position = UDim2.new(0, 275, 0, 215)
CopyButton.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
CopyButton.Text = "Copy"
CopyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyButton.TextSize = 14
CopyButton.Font = Enum.Font.GothamBold
CopyButton.Parent = MainFrame

local CopyCorner = Instance.new("UICorner")
CopyCorner.CornerRadius = UDim.new(0, 6)
CopyCorner.Parent = CopyButton

-- Clear Button
local ClearButton = Instance.new("TextButton")
ClearButton.Name = "ClearButton"
ClearButton.Size = UDim2.new(0, 120, 0, 35)
ClearButton.Position = UDim2.new(0, 405, 0, 215)
ClearButton.BackgroundColor3 = Color3.fromRGB(200, 80, 80)
ClearButton.Text = "Clear"
ClearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearButton.TextSize = 14
ClearButton.Font = Enum.Font.GothamBold
ClearButton.Parent = MainFrame

local ClearCorner = Instance.new("UICorner")
ClearCorner.CornerRadius = UDim.new(0, 6)
ClearCorner.Parent = ClearButton

-- Response Label
local ResponseLabel = Instance.new("TextLabel")
ResponseLabel.Name = "ResponseLabel"
ResponseLabel.Size = UDim2.new(1, -30, 0, 25)
ResponseLabel.Position = UDim2.new(0, 15, 0, 260)
ResponseLabel.BackgroundTransparency = 1
ResponseLabel.Text = "Response:"
ResponseLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
ResponseLabel.TextSize = 14
ResponseLabel.Font = Enum.Font.Gotham
ResponseLabel.TextXAlignment = Enum.TextXAlignment.Left
ResponseLabel.Parent = MainFrame

-- Response Box (ScrollingFrame)
local ResponseFrame = Instance.new("ScrollingFrame")
ResponseFrame.Name = "ResponseFrame"
ResponseFrame.Size = UDim2.new(1, -30, 0, 140)
ResponseFrame.Position = UDim2.new(0, 15, 0, 290)
ResponseFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
ResponseFrame.BorderSizePixel = 0
ResponseFrame.ScrollBarThickness = 6
ResponseFrame.Parent = MainFrame

local ResponseCorner = Instance.new("UICorner")
ResponseCorner.CornerRadius = UDim.new(0, 6)
ResponseCorner.Parent = ResponseFrame

local ResponseBox = Instance.new("TextLabel")
ResponseBox.Name = "ResponseBox"
ResponseBox.Size = UDim2.new(1, -10, 1, 0)
ResponseBox.BackgroundTransparency = 1
ResponseBox.TextColor3 = Color3.fromRGB(255, 255, 255)
ResponseBox.TextSize = 12
ResponseBox.Font = Enum.Font.Code
ResponseBox.Text = "Your generated code will appear here..."
ResponseBox.TextXAlignment = Enum.TextXAlignment.Left
ResponseBox.TextYAlignment = Enum.TextYAlignment.Top
ResponseBox.TextWrapped = true
ResponseBox.Parent = ResponseFrame

local ResponsePadding = Instance.new("UIPadding")
ResponsePadding.PaddingLeft = UDim.new(0, 10)
ResponsePadding.PaddingTop = UDim.new(0, 10)
ResponsePadding.PaddingRight = UDim.new(0, 10)
ResponsePadding.Parent = ResponseBox

-- Make draggable
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Button Functions
local currentResponse = ""
local selectedModel = MODELS[1]
local currentModelIndex = 1

ModelDropdown.MouseButton1Click:Connect(function()
    currentModelIndex = currentModelIndex % #MODELS + 1
    selectedModel = MODELS[currentModelIndex]
    ModelDropdown.Text = selectedModel
end)

GenerateButton.MouseButton1Click:Connect(function()
    local prompt = PromptBox.Text
    if prompt == "" then
        ResponseBox.Text = "Error: Please enter a prompt"
        return
    end
    
    ResponseBox.Text = "Generating... Please wait..."
    GenerateButton.Text = "Loading..."
    GenerateButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    
    task.spawn(function()
        local response, err = callAI(prompt, selectedModel)
        
        if response then
            currentResponse = response
            ResponseBox.Text = response
            
            -- Update canvas size for scrolling
            local textSize = game:GetService("TextService"):GetTextSize(
                response,
                ResponseBox.TextSize,
                ResponseBox.Font,
                Vector2.new(ResponseBox.AbsoluteSize.X, math.huge)
            )
            ResponseFrame.CanvasSize = UDim2.new(0, 0, 0, textSize.Y + 20)
        else
            ResponseBox.Text = "Error: " .. tostring(err)
            currentResponse = ""
        end
        
        GenerateButton.Text = "Generate"
        GenerateButton.BackgroundColor3 = Color3.fromRGB(60, 120, 240)
    end)
end)

ExecuteButton.MouseButton1Click:Connect(function()
    if currentResponse ~= "" then
        local success, err = pcall(function()
            loadstring(currentResponse)()
        end)
        
        if success then
            ResponseBox.Text = "✓ Script executed successfully!\n\n" .. currentResponse
        else
            ResponseBox.Text = "✗ Execution Error: " .. tostring(err) .. "\n\n" .. currentResponse
        end
    else
        ResponseBox.Text = "Error: No code to execute"
    end
end)

CopyButton.MouseButton1Click:Connect(function()
    if currentResponse ~= "" then
        setclipboard(currentResponse)
        local originalText = CopyButton.Text
        local originalColor = CopyButton.BackgroundColor3
        CopyButton.Text = "Copied!"
        CopyButton.BackgroundColor3 = Color3.fromRGB(80, 180, 120)
        task.wait(1.5)
        CopyButton.Text = originalText
        CopyButton.BackgroundColor3 = originalColor
    else
        ResponseBox.Text = "Error: No code to copy"
    end
end)

ClearButton.MouseButton1Click:Connect(function()
    PromptBox.Text = ""
    ResponseBox.Text = "Your generated code will appear here..."
    currentResponse = ""
    ResponseFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
end)

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

print("AI Assistant GUI loaded successfully!")
print("Using API: " .. API_URL)